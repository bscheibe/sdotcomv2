{
  "name": "limits",
  "description": "Sets the limit to upload size and processing time for incoming and outgoing requests.",
  "author": {
    "name": "Abhinav Raj",
    "email": "abhinavr@yahoo-inc.com"
  },
  "version": "0.0.3",
  "devDependencies": {
    "ytestrunner": "*",
    "yuitest": "*",
    "jshint": "~0.9.0",
    "istanbul": "~0.1.27"
  },
  "main": "./lib/index.js",
  "scripts": {
    "pretest": "jshint --config ./node_modules/yui-lint/jshint.json ./lib/",
    "test": "istanbul cover --print=both --yui ytestrunner -- --include ./tests/options.js --include ./tests/builder.js --include ./tests/parser.js --include ./tests/parser_coffee.js --include ./tests/test-limits.js"
  },
  "bugs": {
    "url": "http://github.com/yahoo/node-limits/issues"
  },
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/yahoo/node-limits/blob/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/yahoo/node-limits.git"
  },
  "engines": {
    "node": ">0.8.x"
  },
  "readme": "limits\n=======\n\nSimple express/connect middleware to set limit to upload size, set request timeout etc.\n\nIt is responsible for:\n\n* Preventing upload completely.\n  In config, use: { file_uploads: false }\n\n* Limiting the total size of upload\n  In config, use: { post_max_size: [bytes] }, if 0, this functionality is disabled\n  \n* Limiting the length of uri\n  In config, use: { uri_max_length: [number] }, if 0 this functionality is disabled\n\n* Setting a global absolute timeout for both incoming and outgoing connections\n  In config, use: { global_timeout: [millis] }, if 0  - no timeout is set\n\n* Setting a global absolute timeout for incoming connections only\n  In config, use: { inc_req_timeout: [millis] }, if 0  - no timeout is set\n\n* Setting a global absolute timeout for outgoing connections only\n  In config, use: { out_req_timeout: [millis] }, if 0  - no timeout is set\n\n* Setting idle timeout for incoming connections\n  In config, use: { idle_timeout: [millis] }, if 0  - no timeout is set\n\n* Setting the http.Agent.defaultMaxSockets for the entire app\n  In config, use: { max_sockets: [number] }, if 0  - nothing will be set.\n  \n* Setting the socket noDelay\n  In config, use: { socket_no_delay: [boolean] }, if false  - nothing will be set.\n\nTo completely disable module use config, { enable: false }.\nEach of the above functionality is disabled if corresponding config attribute is not set.\n\ninstall\n-------\nWith npm do:\n\n`npm install limits`\n\nusage\n-----\n\n```javascript\nvar express = require('express'),\n    limits = require('limits');\n\nvar app = express();\n\nvar limits_config = {\n    enable: true,\n    file_uploads: true,\n    post_max_size: 2000000\n}\n\napp.use(limits(limits_config));\n\napp.listen(8000);\n```\nBuild Status\n------------\n\n[![Build Status](https://secure.travis-ci.org/yahoo/node-limits.png?branch=master)](http://travis-ci.org/yahoo/node-limits)\n\nNode Badge\n----------\n\n[![NPM](https://nodei.co/npm/limits.png)](https://nodei.co/npm/limits/)\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/yahoo/node-limits",
  "_id": "limits@0.0.3",
  "_shasum": "f490ac1b8352af246f16c137e7536a7a593ed2ea",
  "_from": "limits@",
  "_resolved": "https://registry.npmjs.org/limits/-/limits-0.0.3.tgz"
}
